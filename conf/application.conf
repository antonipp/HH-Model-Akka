play.crypto.secret = "changeme"

play.i18n.langs = "en"

play.akka.actor-system = "ClusterSystem"

akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  actor {
    provider = cluster
    kryo  { # Configuration for the Kryo serializer
      type = "graph"

      idstrategy = "explicit"

      buffer-size = 4096

      max-buffer-size = -1

      use-manifests = false

      use-unsafe = false

      post-serialization-transformations = "lz4"

      implicit-registration-logging = false

      kryo-trace = false

      resolve-subclasses = false

      mappings {
          "actors.MotorSystem$ProcessTick$" = 30,
          "actors.Master$ResultSum" = 31,
          "actors.Master$SystemRegistration$" = 32,
          "scala.collection.mutable.ArrayBuffer" = 33
      }

      classes = [
          "actors.MotorSystem$ProcessTick$",
          "actors.Master$ResultSum",
          "actors.Master$SystemRegistration$",
          "scala.collection.mutable.ArrayBuffer"
      ]
    }
    serializers {
      java = "akka.serialization.JavaSerializer"
      # Define kryo serializer
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "actors.MotorSystem$ProcessTick$" = kryo
      "actors.Master$ResultSum" = kryo
      "actors.Master$SystemRegistration$" = kryo
      "scala.collection.mutable.ArrayBuffer" = kryo
    }
  }
  loglevel = "WARNING"
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    maximum-payload-bytes = 900000 bytes # For messsages containing the result signal
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0 # Random port
      message-frame-size =  900000b
      send-buffer-size =  900000b
      receive-buffer-size =  900000b
      maximum-frame-size = 900000b
    }
  }

  cluster {
    use-dispatcher = akka.cluster.cluster-dispatcher # A dedicated dispatcher is useful for when nodes are under high workloads
    cluster-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 2
        parallelism-max = 4
      }
    }

    seed-nodes = [ # MotorSystems
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]
  }
}
